/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class saf_0005fwrap */


#ifndef _Included_saf_0005fwrap
#define _Included_saf_0005fwrap
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     saf_0005fwrap
 * Method:    native_open
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1open
  (JNIEnv *, jobject, jstring, jstring, jstring);

/*
 * Class:     saf_0005fwrap
 * Method:    native_close
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_saf_1wrap_native_1close
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_num_tops
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1num_1tops
  (JNIEnv *, jobject);

/*
 * Class:     saf_0005fwrap
 * Method:    native_num_suites
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1num_1suites
  (JNIEnv *, jobject);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_set_name
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1get_1set_1name
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_set_silrole
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1get_1set_1silrole
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_set_extmode
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1get_1set_1extmode
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_set_topmode
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1get_1set_1topmode
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_set_max_topo_dim
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1set_1max_1topo_1dim
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_is_set_equiv
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_saf_1wrap_native_1is_1set_1equiv
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_all_sets_id
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1all_1sets_1id
  (JNIEnv *, jobject);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_suite_sets_id
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1suite_1sets_1id
  (JNIEnv *, jobject);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_coll_cat_name
 * Signature: (II)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1get_1coll_1cat_1name
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_cat_name
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1get_1cat_1name
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_coll_count
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1coll_1count
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_coll_celltype
 * Signature: (II)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1get_1coll_1celltype
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_coll_is_decomp
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_saf_1wrap_native_1get_1coll_1is_1decomp
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_category_name
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1get_1category_1name
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_lookup_coll_num
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1lookup_1coll_1num
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_coll_id
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1coll_1id
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_subsets
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1subsets
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_subset_relation_info
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1get_1subset_1relation_1info
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_range_set
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1range_1set
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_range_coll
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1range_1coll
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_topos
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1topos
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_topo_relation
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1topo_1relation
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_topo_domain_id
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1topo_1domain_1id
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_subset_relation
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1subset_1relation
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_topo_rel_size
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1topo_1rel_1size
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_topo_rel_type
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1get_1topo_1rel_1type
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_topo_rel_data
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1topo_1rel_1data
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_subset_rel_size
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1subset_1rel_1size
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_subset_rel_type
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1get_1subset_1rel_1type
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_subset_rel_data
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1subset_1rel_1data
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_field_data
 * Signature: (II)F
 */
JNIEXPORT jfloat JNICALL Java_saf_1wrap_native_1get_1field_1data
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_field_data_int
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1field_1data_1int
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_remap_field
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1remap_1field
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_indfield_data
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1indfield_1data
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_state_data
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1state_1data
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_number_of_sets
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1number_1of_1sets
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_coll_info
 * Signature: (II)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1coll_1info
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_field_info
 * Signature: (II)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1field_1info
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_num_fields_on_coll
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1num_1fields_1on_1coll
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_field_rel_id
 * Signature: (III)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1field_1rel_1id
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_field_menu_string
 * Signature: (II)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1get_1field_1menu_1string
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_field_name
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1get_1field_1name
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_field_data_type
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1get_1field_1data_1type
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_field_interleave
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1get_1field_1interleave
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_field_data_size
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1field_1data_1size
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_field_is_coord
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_saf_1wrap_native_1get_1field_1is_1coord
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_field_coeff_assoc_id
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1field_1coeff_1assoc_1id
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_attribute_string
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1attribute_1string
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_attr_name
 * Signature: (II)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1get_1attr_1name
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_attr_data
 * Signature: (ILjava/lang/String;I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1get_1attr_1data
  (JNIEnv *, jobject, jint, jstring, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_attr_type
 * Signature: (ILjava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1get_1attr_1type
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     saf_0005fwrap
 * Method:    native_attribute_count
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1attribute_1count
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_sub_attribute_count
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1sub_1attribute_1count
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     saf_0005fwrap
 * Method:    native_is_attribute_primitive
 * Signature: (ILjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_saf_1wrap_native_1is_1attribute_1primitive
  (JNIEnv *, jobject, jint, jstring);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_field_assoc_ratio
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1field_1assoc_1ratio
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_field_storage_decomp_id
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1field_1storage_1decomp_1id
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_field_eval_coll_id
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1field_1eval_1coll_1id
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_field_num_comps
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1field_1num_1comps
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_field_component
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1field_1component
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_field_eval_func
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1get_1field_1eval_1func
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_field_id
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1field_1id
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_fieldtmpl_id
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1fieldtmpl_1id
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_fieldtmpl_name
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1get_1fieldtmpl_1name
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_field_base_space_id
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1field_1base_1space_1id
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_field_base_space_name
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1get_1field_1base_1space_1name
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_fieldtmpl_num_comp
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1fieldtmpl_1num_1comp
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_fieldtmpl_basis
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1get_1fieldtmpl_1basis
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_fieldtmpl_atype
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1get_1fieldtmpl_1atype
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_fieldtmpl_component
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1fieldtmpl_1component
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_state_num_states
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1state_1num_1states
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_state_name
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1get_1state_1name
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_state_field_on_state
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1state_1field_1on_1state
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_a_set
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1a_1set
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_get_num_colls
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1get_1num_1colls
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_find_set_field_tmpls
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_saf_1wrap_native_1find_1set_1field_1tmpls
  (JNIEnv *, jobject, jint);

/*
 * Class:     saf_0005fwrap
 * Method:    native_tree
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_saf_1wrap_native_1tree
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
