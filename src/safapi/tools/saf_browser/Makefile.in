## Copyright(C) 1999-2005 The Regents of the University of California.
##     This work  was produced, in  part, at the  University of California, Lawrence Livermore National
##     Laboratory    (UC LLNL)  under    contract number   W-7405-ENG-48 (Contract    48)   between the
##     U.S. Department of Energy (DOE) and The Regents of the University of California (University) for
##     the  operation of UC LLNL.  Copyright  is reserved to  the University for purposes of controlled
##     dissemination, commercialization  through formal licensing, or other  disposition under terms of
##     Contract 48; DOE policies, regulations and orders; and U.S. statutes.  The rights of the Federal
##     Government  are reserved under  Contract 48 subject  to the restrictions agreed  upon by DOE and
##     University.
## 
## Copyright(C) 1999-2005 Sandia Corporation.  
##     Under terms of Contract DE-AC04-94AL85000, there is a non-exclusive license for use of this work
##     on behalf of the U.S. Government.  Export  of this program may require a license from the United
##     States Government.
## 
## Disclaimer:
##     This document was  prepared as an account of  work sponsored by an agency  of  the United States
##     Government. Neither the United States  Government nor the United States Department of Energy nor
##     the  University  of  California  nor  Sandia  Corporation nor any  of their employees  makes any
##     warranty, expressed  or  implied, or  assumes   any  legal liability  or responsibility  for the
##     accuracy,  completeness,  or  usefulness  of  any  information, apparatus,  product,  or process
##     disclosed,  or  represents that its  use would   not infringe  privately owned rights. Reference
##     herein  to any  specific commercial  product,  process,  or  service by  trade  name, trademark,
##     manufacturer,  or  otherwise,  does  not   necessarily  constitute  or  imply  its  endorsement,
##     recommendation, or favoring by the  United States Government   or the University of  California.
##     The views and opinions of authors expressed herein do not necessarily state  or reflect those of
##     the  United  States Government or  the   University of California   and shall  not be  used  for
##     advertising or product endorsement purposes.
## 
## 
## Active Developers:
##     Peter K. Espen              SNL
##     Eric A. Illescas            SNL
##     Jake S. Jones               SNL
##     Robb P. Matzke              LLNL
##     Greg Sjaardema              SNL
## 
## Inactive Developers:
##     William J. Arrighi          LLNL
##     Ray T. Hitt                 SNL
##     Mark C. Miller              LLNL
##     Matthew O'Brien             LLNL
##     James F. Reus               LLNL
##     Larry A. Schoof             SNL
## 
## Acknowledgements:
##     Marty L. Barnaby            SNL - Red parallel perf. study/tuning
##     David M. Butler             LPS - Data model design/implementation Spec.
##     Albert K. Cheng             NCSA - Parallel HDF5 support
##     Nancy Collins               IBM - Alpha/Beta user
##     Linnea M. Cook              LLNL - Management advocate
##     Michael J. Folk             NCSA - Management advocate 
##     Richard M. Hedges           LLNL - Blue-Pacific parallel perf. study/tuning 
##     Wilbur R. Johnson           SNL - Early developer
##     Quincey Koziol              NCSA - Serial HDF5 Support 
##     Celeste M. Matarazzo        LLNL - Management advocate
##     Tyce T. McLarty             LLNL - parallel perf. study/tuning
##     Tom H. Robey                SNL - Early developer
##     Reinhard W. Stotzer         SNL - Early developer
##     Judy Sturtevant             SNL - Red parallel perf. study/tuning 
##     Robert K. Yates             LLNL - Blue-Pacific parallel perf. study/tuning
## 
top_srcdir=@top_srcdir@
top_builddir=../../..
srcdir=@srcdir@
@COMMENCE@

# All tools depend on the other SAF libraries. Make sure they're up to date.
LIB_DEPS=@SAFAPI_LIB@ @SSLIB_LIB@

#new, Makefile symbols instead of autoconf symbols
LIBSAFAPI_LA=../../lib/libsafapi.la
LIBS=@SAFAPI_LIBS@


# Only edit past this point if you want to 

browser_srcdir=${top_srcdir}/safapi/tools/saf_browser

# The location of your 1.3.1 of greater jar executable
JAR=${JAVASDK}/bin/jar

TOOLS=saf_browser libsafgui.so SAFGUI.jar safapi.html

JAVA_PLATFORM_INCLUDE=${JNI_INCLUDE}

LINK_FLAGS= -lsafapi -lss -lhdf5 -lz -lm

Z_LIB=/usr/local/lib

saf_browser: SAFGUI.class libsafgui.so
	cp -f ${browser_srcdir}/saf_browser.sh saf_browser

SAFGUI.jar: SAFGUI.class libsafgui.so MANIFEST.MF safapi.html
	${JAR} cvmf MANIFEST.MF SAFGUI.jar *.class *.html resources

classfiles: SAFGUI.class SAFModule.class InternalSAFFrame.class SAFGUIApplet.class \
	SAFTree.class GetFile.class saf_wrap.class \
     AquaTheme.class CharcoalTheme.class ContrastTheme.class \
     EmeraldTheme.class RubyTheme.class JAVATEST.class 

safgui: libsafgui.so

SAFGUI.class: SAFGUI.java
	if test -f SAFGUI.java ; then /bin/true ; else cp -f ${browser_srcdir}/*.java . ; fi
	if test -d resources ; then /bin/true ; else ln -s ${browser_srcdir}/resources resources ; fi
	if test -f MANIFEST.MF ; then /bin/true ; else cp -f ${browser_srcdir}/MANIFEST.MF . ; fi
	if test -f safapi.html ; then /bin/true ; else cp -f ${browser_srcdir}/*.html . ; fi
	${JAVAC} ${CLASSPATH} SAFGUI.java
	${JAVAH} -jni saf_init

SAFModule.class: SAFModule.java
	${JAVAC} ${CLASSPATH} SAFModule.java

SAFTree.class: SAFTree.java
	${JAVAC} ${CLASSPATH} SAFTree.java

saf_wrap.class: saf_wrap.java
	${JAVAC} ${CLASSPATH} saf_wrap.java
	${JAVAH} -jni saf_wrap

saf_0005fwrap.h: saf_wrap.class
	${JAVAH} -jni saf_wrap

GetFile.class: GetFile.java
	${JAVAC} ${CLASSPATH} GetFile.java

InternalSAFFrame.class: InternalSAFFrame.java
	${JAVAC} ${CLASSPATH} InternalSAFFrame.java

SAFGUIApplet.class: SAFGUIApplet.java
	${JAVAC} ${CLASSPATH} SAFGUIApplet.java

AquaTheme.class: AquaTheme.java
	${JAVAC} ${CLASSPATH} AquaTheme.java

EmeraldTheme.class: EmeraldTheme.java
	${JAVAC} ${CLASSPATH} EmeraldTheme.java

CharcoalTheme.class: CharcoalTheme.java
	${JAVAC} ${CLASSPATH} CharcoalTheme.java

RubyTheme.class: RubyTheme.java
	${JAVAC} ${CLASSPATH} RubyTheme.java

JAVATEST.class: JAVATEST.java
	${JAVAC} ${CLASSPATH} JAVATEST.java

libsafgui.so: ${browser_srcdir}/saf_init.c saf_0005finit.h ${browser_srcdir}/saf_wrap.c saf_0005fwrap.h
	${CC} ${BROWSER_SHARED_FLAG} ${CPPFLAGS} ${CFLAGS} -I${JAVA_INCLUDE} -I${JAVA_PLATFORM_INCLUDE} \
	${JSHARED_FLAGS} ${browser_srcdir}/saf_init.c ${browser_srcdir}/saf_wrap.c -L../../lib/.libs  \
	-L../../../sslib/lib/.libs ${LDFLAGS} -o libsafgui.so -lsafapi -lss ${LIBS} ${SAFAPI_LIBS}


CLEAN=*.class *.o *.jar libsafgui.so saf_browser

# clean:
# 	rm -f *.class *.o *.jar libsafgui.so

# install:
#	${JAR} cvmf MANIFEST.MF SAFGUI.jar *.class *.html resources

# test:
#	$(MAKE)
#	${JAVA} ${CLASSPATH} JAVATEST



@CONCLUDE@
