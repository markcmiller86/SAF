## SAFAPI examples Makefile(.in)
##
## Copyright(C) 1999-2005 The Regents of the University of California.
##     This work  was produced, in  part, at the  University of California, Lawrence Livermore National
##     Laboratory    (UC LLNL)  under    contract number   W-7405-ENG-48 (Contract    48)   between the
##     U.S. Department of Energy (DOE) and The Regents of the University of California (University) for
##     the  operation of UC LLNL.  Copyright  is reserved to  the University for purposes of controlled
##     dissemination, commercialization  through formal licensing, or other  disposition under terms of
##     Contract 48; DOE policies, regulations and orders; and U.S. statutes.  The rights of the Federal
##     Government  are reserved under  Contract 48 subject  to the restrictions agreed  upon by DOE and
##     University.
## 
## Copyright(C) 1999-2005 Sandia Corporation.  
##     Under terms of Contract DE-AC04-94AL85000, there is a non-exclusive license for use of this work
##     on behalf of the U.S. Government.  Export  of this program may require a license from the United
##     States Government.
## 
## Disclaimer:
##     This document was  prepared as an account of  work sponsored by an agency  of  the United States
##     Government. Neither the United States  Government nor the United States Department of Energy nor
##     the  University  of  California  nor  Sandia  Corporation nor any  of their employees  makes any
##     warranty, expressed  or  implied, or  assumes   any  legal liability  or responsibility  for the
##     accuracy,  completeness,  or  usefulness  of  any  information, apparatus,  product,  or process
##     disclosed,  or  represents that its  use would   not infringe  privately owned rights. Reference
##     herein  to any  specific commercial  product,  process,  or  service by  trade  name, trademark,
##     manufacturer,  or  otherwise,  does  not   necessarily  constitute  or  imply  its  endorsement,
##     recommendation, or favoring by the  United States Government   or the University of  California.
##     The views and opinions of authors expressed herein do not necessarily state  or reflect those of
##     the  United  States Government or  the   University of California   and shall  not be  used  for
##     advertising or product endorsement purposes.
## 
## 
## Active Developers:
##     Peter K. Espen              SNL
##     Eric A. Illescas            SNL
##     Jake S. Jones               SNL
##     Robb P. Matzke              LLNL
##     Greg Sjaardema              SNL
## 
## Inactive Developers:
##     William J. Arrighi          LLNL
##     Ray T. Hitt                 SNL
##     Mark C. Miller              LLNL
##     Matthew O'Brien             LLNL
##     James F. Reus               LLNL
##     Larry A. Schoof             SNL
## 
## Acknowledgements:
##     Marty L. Barnaby            SNL - Red parallel perf. study/tuning
##     David M. Butler             LPS - Data model design/implementation Spec.
##     Albert K. Cheng             NCSA - Parallel HDF5 support
##     Nancy Collins               IBM - Alpha/Beta user
##     Linnea M. Cook              LLNL - Management advocate
##     Michael J. Folk             NCSA - Management advocate 
##     Richard M. Hedges           LLNL - Blue-Pacific parallel perf. study/tuning 
##     Wilbur R. Johnson           SNL - Early developer
##     Quincey Koziol              NCSA - Serial HDF5 Support 
##     Celeste M. Matarazzo        LLNL - Management advocate
##     Tyce T. McLarty             LLNL - parallel perf. study/tuning
##     Tom H. Robey                SNL - Early developer
##     Reinhard W. Stotzer         SNL - Early developer
##     Judy Sturtevant             SNL - Red parallel perf. study/tuning 
##     Robert K. Yates             LLNL - Blue-Pacific parallel perf. study/tuning
## 
top_srcdir=@top_srcdir@
top_builddir=../..
srcdir=@srcdir@
mkdoc_ex_meta=-c ./config.mkdoc

@COMMENCE@

DATACLEAN=$(TEST_FILE_PATH)/{birth_death,step_*,larry1,storagew,triangle_mesh,str_mesh_*}.saf

# The test executables. You may list them in any order.
TESTS=larry1w exo_par_wt exo_basic_wt dyn_lb triangle_mesh storagew \
	birth_death_w birth_death_r exo_basic_rd hadaptive loadbalance loadbalance_rd \
	remap_n21 exo_par_rd dyn_lb_rd

TEST_SRC=$(TESTS:=.c)
TEST_OBJ=$(TESTS:=.lo)

# What checks? We currently have one check for each executable.
CHECKS=larry1w.check exo_basic_wt.check exo_par_wt.check dyn_lb.check \
       triangle_mesh.check storagew.check \
	birth_death_w.check birth_death_r.check exo_basic_rd.check hadaptive.check \
	loadbalance.check loadbalance_rd.check remap_n21.check exo_par_rd.check

# All examples depend on the other SAF libraries. Make sure they're up to date.
LIB_DEPS=@SSLIB_LIB@ @SAFAPI_LIB@

# How to link each test case
birth_death_w: birth_death_w.lo exampleutil.lo ../test/testutil.lo
	@$(LT_LINK_EXE) $(CFLAGS) -o $@ birth_death_w.lo exampleutil.lo ../lib/libsafapi.la \
	../test/testutil.lo @SAFAPI_LDFLAGS@ @SAFAPI_LIBS@ -lm

larry1w: larry1w.lo
	@$(LT_LINK_EXE) $(CFLAGS) -o $@ larry1w.lo ../lib/libsafapi.la @SAFAPI_LDFLAGS@ @SAFAPI_LIBS@ -lm

readutils.lo: readutils.h readutils.c

birth_death_r: birth_death_r.lo readutils.lo ../test/testutil.lo 
	@$(LT_LINK_EXE) $(CFLAGS) -o $@ birth_death_r.lo readutils.lo ../lib/libsafapi.la \
	../test/testutil.lo @SAFAPI_LDFLAGS@ @SAFAPI_LIBS@ -lm

loadbalance: loadbalance.lo exampleutil.lo ../test/testutil.lo
	@$(LT_LINK_EXE) $(CFLAGS) -o $@ loadbalance.lo exampleutil.lo ../lib/libsafapi.la \
	../test/testutil.lo @SAFAPI_LDFLAGS@ @SAFAPI_LIBS@ -lm

loadbalance_rd: loadbalance_rd.lo readutils.lo ../test/testutil.lo
	@$(LT_LINK_EXE) $(CFLAGS) -o $@ loadbalance_rd.lo readutils.lo ../lib/libsafapi.la \
	../test/testutil.lo @SAFAPI_LDFLAGS@ @SAFAPI_LIBS@ -lm

hadaptive: hadaptive.lo exampleutil.lo ../test/testutil.lo
	@$(LT_LINK_EXE) $(CFLAGS) -o $@ hadaptive.lo exampleutil.lo ../test/testutil.lo \
        ../lib/libsafapi.la @SAFAPI_LDFLAGS@ @SAFAPI_LIBS@ -lm

exo_basic_wt: exo_basic_wt.lo ../test/testutil.lo
	@$(LT_LINK_EXE) $(CFLAGS) -o $@ exo_basic_wt.lo ../lib/libsafapi.la ../test/testutil.lo @SAFAPI_LDFLAGS@ @SAFAPI_LIBS@ -lm

exo_basic_rd: exo_basic_rd.lo readutils.lo ../test/testutil.lo
	@$(LT_LINK_EXE) $(CFLAGS) -o $@ exo_basic_rd.lo readutils.lo ../lib/libsafapi.la \
	../test/testutil.lo @SAFAPI_LDFLAGS@ @SAFAPI_LIBS@ -lm

exo_par_wt: exo_par_wt.lo ../test/testutil.h
	@$(LT_LINK_EXE) $(CFLAGS) -o $@ exo_par_wt.lo ../lib/libsafapi.la @SAFAPI_LDFLAGS@ @SAFAPI_LIBS@ -lm

exo_par_rd: exo_par_rd.lo readutils.lo ../test/testutil.lo
	@$(LT_LINK_EXE) $(CFLAGS) -o $@ exo_par_rd.lo readutils.lo ../lib/libsafapi.la \
	../test/testutil.lo @SAFAPI_LDFLAGS@ @SAFAPI_LIBS@ -lm

dyn_lb: dyn_lb.lo ../test/testutil.h
	@$(LT_LINK_EXE) $(CFLAGS) -o $@ dyn_lb.lo ../lib/libsafapi.la @SAFAPI_LDFLAGS@ @SAFAPI_LIBS@ -lm

dyn_lb_rd: dyn_lb_rd.lo readutils.lo ../test/testutil.h
	@$(LT_LINK_EXE) $(CFLAGS) -o $@ dyn_lb_rd.lo readutils.lo ../lib/libsafapi.la \
	../test/testutil.lo @SAFAPI_LDFLAGS@ @SAFAPI_LIBS@ -lm

remap_n21: remap_n21.lo
	@$(LT_LINK_EXE) $(CFLAGS) -o $@ remap_n21.lo ../lib/libsafapi.la @SAFAPI_LDFLAGS@ @SAFAPI_LIBS@ -lm

triangle_mesh: triangle_mesh.lo
	@$(LT_LINK_EXE) $(CFLAGS) -o $@ triangle_mesh.lo ../lib/libsafapi.la @SAFAPI_LDFLAGS@ @SAFAPI_LIBS@ -lm

storagew: storagew.lo
	@$(LT_LINK_EXE) $(CFLAGS) -o $@ storagew.lo ../lib/libsafapi.la @SAFAPI_LDFLAGS@ @SAFAPI_LIBS@ -lm

# The checks.
birth_death_w.check: birth_death_w $(TESTS)
	@$(BANNER) birth_death_w
	$(RUNTEST) ./birth_death_w -seq $(top_srcdir)/safapi/examples/birth_death.in
	@touch $@

birth_death_r.check: birth_death_r birth_death_w.check
	@$(BANNER) birth_death_r
	$(RUNTEST) ./birth_death_r -quiet do_describes do_reads
	@touch $@

larry1w.check: larry1w birth_death_r.check
	@$(BANNER) larry1w
	$(RUNTEST) ./larry1w
	@touch $@

exo_basic_wt.check: exo_basic_wt larry1w.check
	@$(BANNER) exo_basic_wt
	$(RUNTEST) ./exo_basic_wt
	@touch $@

exo_basic_rd.check: exo_basic_rd exo_basic_wt.check
	@$(BANNER) exo_basic_rd
	$(RUNTEST) ./exo_basic_rd -quiet do_describes do_reads
	@touch $@

exo_par_wt.check: exo_par_wt exo_basic_rd.check
	@$(BANNER) exo_par_wt
	$(RUNTEST) ./exo_par_wt
	@touch $@

exo_par_rd.check: exo_par_rd exo_par_wt.check
	@$(BANNER) exo_par_rd
	$(RUNTEST) ./exo_par_rd do_describes do_reads
	@touch $@

dyn_lb.check: dyn_lb exo_par_rd.check
	@$(BANNER) dyn_lb
	$(RUNTEST) ./dyn_lb
	@touch $@

dyn_lb_rd.check: dyn_lb_rd dyn_lb.check
	@$(BANNER) dyn_lb_rd
	$(RUNTEST) ./dyn_lb_rd -quiet do_describes do_reads
	@touch $@

remap_n21.check: remap_n21 dyn_lb_rd.check 
	@$(BANNER) remap_n21
	$(RUNSERIAL) ./remap_n21 -quiet
	@touch $@

loadbalance.check: loadbalance remap_n21.check
	@$(BANNER) loadbalance
	$(RUNTEST) ./loadbalance
	@touch $@

loadbalance_rd.check: loadbalance_rd loadbalance.check
	@$(BANNER) loadbalance_rd
	$(RUNTEST) ./loadbalance_rd -quiet do_describes do_reads
	@touch $@

triangle_mesh.check: triangle_mesh loadbalance_rd.check
	@$(BANNER) triangle_mesh
	$(RUNTEST) ./triangle_mesh
	@touch $@

storagew.check: storagew triangle_mesh.check
	@$(BANNER) storagew
	$(RUNTEST) ./storagew
	@touch $@

hadaptive.check: hadaptive storagew.check
	@$(BANNER) hadaptive
	$(RUNTEST) ./hadaptive
	@touch $@

## What source files get documented
DOC_SRC=$(TEST_SRC) exampleutil.c exampleutil.h

## HTML version of the examples documentation
html_here: ../docs/examples.html/examples.html.toc
../docs/examples.html/examples.html.toc: $(LIB_SRC) $(PUB_HDR) $(PRIV_HDR) ../docs/refman.html/refman.html.toc
	rm -rf ../docs/examples.html
	mkdir -p ../docs/examples.html
	$(mkdoc) $(mkdoc_ex_meta) $(mkdoc_flags) -u -o ../docs/examples.html -f html -m -p $(srcdir) \
	    -x ../docs/refman.html/refman.html.toc $(DOC_SRC)
	mv ../docs/examples.html/index.toc $@

## MIF version of the examples documentation
mif_here: ../docs/examples.mif.toc
../docs/examples.mif.toc: $(LIB_SRC) $(PUB_HDR) $(PRIV_HDR) ../docs/refman.mif.toc
	mkdir -p ../docs
	$(mkdoc) $(mkdoc_ex_meta) $(mkdoc_flags) -u -o ../docs/examples -f mif -p $(srcdir) \
	    -x ../docs/refman.mif.toc $(DOC_SRC)
	mv ../docs/examples.toc $@

## Texinfo version of the examples documentation
texi_here: ../docs/examples.texi.toc
../docs/examples.texi.toc: $(LIB_SRC) $(PUB_HDR) $(PRIV_HDR) ../docs/refman.texi.toc
	mkdir -p ../docs
	$(mkdoc) $(mkdoc_ex_meta) $(mkdoc_flags) -u -o ../docs/examples -f texi -p $(srcdir) \
	    -x ../docs/refman.texi.toc $(DOC_SRC)
	mv ../docs/examples.toc $@

## Plain text version of the examples documentation
text_here: ../docs/examples.text.toc
../docs/examples.text.toc: $(LIB_SRC) $(PUB_HDR) $(PRIV_HDR) ../docs/refman.text.toc
	mkdir -p ../docs
	$(mkdoc) $(mkdoc_ex_meta) $(mkdoc_flags) -u -o ../docs/examples -f text -p $(srcdir) \
	    -x ../docs/refman.text.toc $(DOC_SRC)
	mv ../docs/examples.toc $@

## GNU Info version of the examples documentation (the texi format from mkdoc specifies refman.info as the info
## output file)
info_here: ../docs/examples.info/refman.info
../docs/examples.info/refman.info: ../docs/examples.texi
	rm -rf ../docs/examples.info
	mkdir -p ../docs/examples.info
	-(cd ../docs/examples.info && makeinfo ../examples.texi) || rmdir ../docs/examples.info
@CONCLUDE@
