#							-*- shell-script -*-
# Copyright(C) 1999 The Regents of the University of California.
#     This work  was produced, in  part, at the  University of California, Lawrence Livermore National
#     Laboratory    (UC LLNL)  under    contract number   W-7405-ENG-48 (Contract    48)   between the
#     U.S. Department of Energy (DOE) and The Regents of the University of California (University) for
#     the  operation of UC LLNL.  Copyright  is reserved to  the University for purposes of controlled
#     dissemination, commercialization  through formal licensing, or other  disposition under terms of
#     Contract 48; DOE policies, regulations and orders; and U.S. statutes.  The rights of the Federal
#     Government  are reserved under  Contract 48 subject  to the restrictions agreed  upon by DOE and
#     University.
# 
# Copyright(C) 1999 Sandia Corporation.
#     Under terms of Contract DE-AC04-94AL85000, there is a non-exclusive license for use of this work
#     on behalf of the U.S. Government.  Export  of this program may require a license from the United
#     States Government.
# 
# Disclaimer:
#     This document was  prepared as an account of  work sponsored by an agency  of  the United States
#     Government. Neither the United States  Government nor the United States Department of Energy nor 
#     the  University  of  California  nor  Sandia  Corporation nor any  of their employees  makes any 
#     warranty, expressed  or  implied, or  assumes   any  legal liability  or responsibility  for the 
#     accuracy,  completeness,  or  usefulness  of  any  information, apparatus,  product,  or process 
#     disclosed,  or  represents that its  use would   not infringe  privately owned rights. Reference 
#     herein  to any  specific commercial  product,  process,  or  service by  trade  name, trademark, 
#     manufacturer,  or  otherwise,  does  not   necessarily  constitute  or  imply  its  endorsement, 
#     recommendation, or favoring by the  United States Government   or the University of  California.  
#     The views and opinions of authors expressed herein do not necessarily state  or reflect those of
#     the  United  States Government or  the   University of California   and shall  not be  used  for
#     advertising or product endorsement purposes.
# 
# Authors:
# 	William J. Arrighi	LLNL
# 	Peter K. Espen		SNL
# 	Ray T. Hitt 		SNL
# 	Robb P. Matzke 		LLNL
# 	Mark C. Miller 		LLNL
# 	James F. Reus 		LLNL
# 	Larry A. Schoof 	SNL
# 
# Acknowledgements:
# 	Marty L. Barnaby	SNL - Red parallel perf. study/tuning
# 	David M. Butler		LPS - Data model design/implementation Spec.
# 	Albert K. Cheng		NCSA - Parallel HDF5 support
# 	Nancy Collins		IBM - Alpha/Beta user
# 	Linnea M. Cook		LLNL - Management advocate
# 	Michael J. Folk		NCSA - Management advocate 
# 	Richard M. Hedges	LLNL - Blue-Pacific parallel perf. study/tuning 
# 	Quincey A. Koziol	NCSA - Serial HDF5 Support 
# 	Celeste M. Matarazzo	LLNL - Management advocate
# 	Tom H. Robey 		SNL - Early developer
# 	Greg D. Sjaardema	SNL - Alpha/Beta user
# 	Reinhard W. Stotzer	SNL - Early developer
# 	Judy Sturtevant		SNL - Red parallel perf. study/tuning 
# 	Robert K. Yates		LLNL - Blue-Pacific parallel perf. study/tuning
# 

# This file should be sourced into configure if the compiler is the
# GNU gcc compiler or a derivative.  It is careful not to do anything
# if the compiler is not GNU; otherwise `cc_flags_set' is set to `yes'
#

# Get the compiler version in a way that works for gcc, egcs, and
# pgcc unless a compiler version is already known
#
#   cc_vendor:    The compiler name: gcc, egcs, or pgcc
#   cc_version:   Version number: 2.91.60, 2.7.2.1
#
if test X = "X$cc_flags_set"; then
    cc_version="`$CC $CFLAGS -v 2>&1 |grep 'gcc version' |sed 's/.*gcc version \([-a-z0-9\.]*\).*/\1/'`"
    if [ -n "$cc_version" ]; then
	cc_vendor=`echo $cc_version |sed 's/\([a-z]*\).*/\1/'`
	cc_version=`echo $cc_version |sed 's/[-a-z]//g'`
	if test X = "X$cc_vendor" -a X != "X$cc_version"; then
	    cc_vendor=gcc
	fi
	if test "-" != "$cc_vendor-$cc_version"; then
	    echo "compiler '$CC' is GNU $cc_vendor-$cc_version"
	fi

	# Some version numbers
	cc_vers_major=`echo $cc_version | cut -f1 -d.`
	cc_vers_minor=`echo $cc_version | cut -f2 -d.`
	cc_vers_patch=`echo $cc_version | cut -f3 -d.`
	test -n "$cc_vers_patch" || cc_vers_patch=0
	cc_vers_all=`expr $cc_vers_major '*' 1000000 + $cc_vers_minor '*' 1000 + $cc_vers_patch`
    fi
fi
if [ -n "$cc_version" ]; then
    # Architecture-specific flags
    case "$host_os-$host_cpu" in
	freebsd*)
	    # FreeBSD sets the information from "hostname -m" to the general machine
	    # architecture, not the specific CPU for the machine, so even our
	    # Pentium II Xeon server is set to "i386".  Once we know we are on a FreeBSD
	    # machine, use the "sysctl" command to get the CPU hardware model.
	    host_cpu_model=`sysctl -n hw.model`
	    case "$host_cpu_model" in
		# Hmm.. this might not catch Celerons, but it won't hurt them either...
		*Pro*|*II*)
		    # This check should be kept in sync with the *-i686 check below
		    case "$cc_vendor-$cc_version" in
			gcc-2.95*)
			    ARCH=${ARCH:="-march=i686"}
			    ;;
			gcc-*|egcs-*|pgcc-*)
			    ARCH=${ARCH:="-mcpu=pentiumpro -march=pentiumpro"}
			    ;;
		    esac
		;;
	    esac
	    ;;

	*-i686)
	    case "$cc_vendor-$cc_version" in
		gcc-2.95*)
		    ARCH=${ARCH:="-march=i686"}
		    ;;
		gcc-*|egcs-*|pgcc-*)
		    ARCH=${ARCH:="-mcpu=pentiumpro -march=pentiumpro"}
		    ;;
	    esac
	    ;;
    esac

    # Host-specific flags
    case "`hostname`" in
	hawkwind.ncsa.uiuc.edu)
	    ARCH="$ARCH -pipe"
	    ;;
    esac

    # Common general flags
    CFLAGS="$CFLAGS -Wall -W -Wundef -Wno-shadow -Wpointer-arith -Wbad-function-cast -Wcast-qual -Wcast-align -Wwrite-strings -Wconversion -Wsign-compare -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wredundant-decls -Wnested-externs -Winline -Wno-long-long"

    # Common production flags
    PROD_CFLAGS="$ARCH -O2 -finline-functions -s"
    PROD_CPPFLAGS="-DNDEBUG"

    # Common debug flags
    DEBUG_CFLAGS="-g -fverbose-asm"
    DEBUG_CPPFLAGS=

    # Common profile flags
    PROFILE_CFLAGS="-pg"
    PROFILE_CPPFLAGS="-DNDEBUG"

    # Specific flags...
    case "$cc_vendor-$cc_version" in
	gcc-2.7*)
	    # Flags are set
	    cc_flags_set=yes
	    ;;

	gcc-2.8.*)
	    # General
	    CFLAGS="$CFLAGS -Wsign-compare"

	    # Production
	    PROD_CFLAGS="$ARCH -O3 -finline-functions -fschedule-insns2 -Wno-shadow -s"
	    PROD_CPPFLAGS="-DNDEBUG"

	    # Debug
	    DEBUG_CFLAGS="-g -fverbose-asm -Wno-shadow"
	    DEBUG_CPPFLAGS=

	    # Profile
	    PROFILE_CFLAGS="-pg"
	    PROFILE_CPPFLAGS="-DNDEBUG"

	    # Flags are set
	    cc_flags_set=yes
	    ;;

	gcc-2.95.*)
	    # General
	    CFLAGS="$CFLAGS -Wsign-compare"

	    # Production
	    PROD_CFLAGS="$ARCH -O6 -Wno-shadow -s"
	    PROD_CPPFLAGS="-DNDEBUG"

	    # Debug
	    DEBUG_CFLAGS="-g -fverbose-asm -Wno-shadow"
	    DEBUG_CPPFLAGS=

	    # Profile
	    PROFILE_CFLAGS="-pg"
	    PROFILE_CPPFLAGS="-DNDEBUG"

	    # Flags are set
	    cc_flags_set=yes
	    ;;

	gcc-3.*)
	    # General
	    CFLAGS="$CFLAGS -Wsign-compare"

	    # Production
	    #   There is a problem with the thread-jumps optimization in GCC-3.3.4 on i686 some where in sslib/lib in SAF-1.9.0
	    #   so I am turning off that optimization at least for the time being [rpm 2004-10-08].
	    PROD_CFLAGS="$ARCH -O6 -fno-thread-jumps -Wno-shadow -s"
	    PROD_CPPFLAGS="-DNDEBUG"

	    # Debug
	    DEBUG_CFLAGS="-g -fverbose-asm -Wno-shadow"
	    DEBUG_CPPFLAGS=

	    # Profile
	    PROFILE_CFLAGS="-pg"
	    PROFILE_CPPFLAGS="-DNDEBUG"

	    # Flags are set
	    cc_flags_set=yes
	    ;;

	egcs-2.*|pgcc-2.*)
	    # General
	    CFLAGS="$CFLAGS -Wsign-compare"

	    # Production
	    PROD_CFLAGS="$ARCH -O6 -Wno-shadow -s"
	    PROD_CPPFLAGS="-DNDEBUG"

	    # Debug
	    DEBUG_CFLAGS="-g -fverbose-asm -Wno-shadow"
	    DEBUG_CPPFLAGS=

	    # Profile
	    PROFILE_CFLAGS="-pg"
	    PROFILE_CPPFLAGS="-DNDEBUG"

	    # Flags are set
	    cc_flags_set=yes
	    ;;

	gcc-*|egcs-*|pgcc-*)
	    # This must be some other GNU compiler that we don't know about.
	    # Just use fairly generic flags.

	    # Production
	    PROD_CFLAGS=-O
	    PROD_CPPFLAGS="-DNDEBUG"

	    # Debug
	    DEBUG_CFLAGS=-g
	    DEBUG_CPPFLAGS=

	    # Profile
	    PROFILE_CFLAGS=-pg
	    PROFILE_CPPFLAGS="-DNDEBUG"

	    # Flags are set
	    cc_flags_set=yes
	    ;;
    esac

    # Clear cc info if no flags set
    if test X = "X$cc_flags_set"; then
	cc_vendor=
	cc_version=
    fi
fi
