## SAFAPI tests Makefile(.in)
##
## Copyright(C) 2004-2005 The Regents of the University of California.
##     This work  was produced, in  part, at the  University of California, Lawrence Livermore National
##     Laboratory    (UC LLNL)  under    contract number   W-7405-ENG-48 (Contract    48)   between the
##     U.S. Department of Energy (DOE) and The Regents of the University of California (University) for
##     the  operation of UC LLNL.  Copyright  is reserved to  the University for purposes of controlled
##     dissemination, commercialization  through formal licensing, or other  disposition under terms of
##     Contract 48; DOE policies, regulations and orders; and U.S. statutes.  The rights of the Federal
##     Government  are reserved under  Contract 48 subject  to the restrictions agreed  upon by DOE and
##     University.
## 
## Copyright(C) 2004-2005 Sandia Corporation.
##     Under terms of Contract DE-AC04-94AL85000, there is a non-exclusive license for use of this work
##     on behalf of the U.S. Government.  Export  of this program may require a license from the United
##     States Government.
## 
## Disclaimer:
##     This document was  prepared as an account of  work sponsored by an agency  of  the United States
##     Government. Neither the United States  Government nor the United States Department of Energy nor 
##     the  University  of  California  nor  Sandia  Corporation nor any  of their employees  makes any 
##     warranty, expressed  or  implied, or  assumes   any  legal liability  or responsibility  for the 
##     accuracy,  completeness,  or  usefulness  of  any  information, apparatus,  product,  or process 
##     disclosed,  or  represents that its  use would   not infringe  privately owned rights. Reference 
##     herein  to any  specific commercial  product,  process,  or  service by  trade  name, trademark, 
##     manufacturer,  or  otherwise,  does  not   necessarily  constitute  or  imply  its  endorsement, 
##     recommendation, or favoring by the  United States Government   or the University of  California.  
##     The views and opinions of authors expressed herein do not necessarily state  or reflect those of
##     the  United  States Government or  the   University of California   and shall  not be  used  for
##     advertising or product endorsement purposes.
## 
## Authors:
##     Robb P. Matzke              LLNL
##     Eric A. Illescas            SNL
## 
## Acknowledgements:
##     Mark C. Miller              LLNL - Design input
## 
top_srcdir=@top_srcdir@
top_builddir=../..
srcdir=@srcdir@
@COMMENCE@

DATACLEAN=$(TEST_FILE_PATH)/tfile1.saf

# The test names, generally corresponding to an executable file. These may appear in any order since dependencies are given below.
TESTS=terr1 tfile1 tblob1 tblob2 tfind1 tsync1 tarray1 tcopy1 tattr1
TEST_SRC=$(TESTS:=.c)
TEST_OBJ=$(TESTS:=.lo)

# The actual tests to run.  The dependencies might influence the order of these tests, but generally they'll probably run in the
# order listed here.
CHECK_BASES=terr1 tfile1 tblob1a tblob1b tblob1c tblob1d tblob1e tblob1f tblob2 tfind1a tfind1b tsync1 tarray1 tcopy1 tattr1
CHECKS=${CHECK_BASES:=.check}

# All tests depend on the other SAF libraries. Make sure they're up to date.
LIB_DEPS=@SSLIB_LIB@

#New make variables, so you only have to change them once, rather than changing all of the targets
LIBS=@SSLIB_LIBS@
LDFLAGS=@SSLIB_LDFLAGS@
LIBSS_LA=../lib/libss.la

# The tests 
terr1.check: terr1
	@$(BANNER) terr1
	$(RUNTEST) ./terr1
	@touch $@

tfile1.check: tfile1
	@$(BANNER) tfile1
	$(RUNTEST) ./tfile1
	@touch $@

tblob1a.check: tblob1
	@$(BANNER) SSLIB_2PIO=off tblob1
	env SSLIB_2PIO=off $(RUNTEST) ./tblob1
	@touch $@

tblob1b.check: tblob1
	@$(BANNER) SSLIB_2PIO=off tblob1 --nelmts=1
	env SSLIB_2PIO=off $(RUNTEST) ./tblob1 --nelmts=1
	@touch $@

tblob1c.check: tblob1
	@$(BANNER) SSLIB_2PIO=off tblob1 --nelmts=0
	env SSLIB_2PIO=off $(RUNTEST) ./tblob1 --nelmts=0
	@touch $@

tblob1d.check: tblob1a.check
	@$(BANNER) tblob1
	$(RUNTEST) ./tblob1
	@touch $@

tblob1e.check: tblob1b.check
	@$(BANNER) tblob1 --nelmts=1
	$(RUNTEST) ./tblob1 --nelmts=1
	@touch $@

tblob1f.check: tblob1c.check
	@$(BANNER) tblob1 --nelmts=0
	$(RUNTEST) ./tblob1 --nelmts=0
	@touch $@

tblob2.check: tblob2
	@$(BANNER) tblob2
	$(RUNTEST) ./tblob2
	@touch $@

tfind1a.check: tfind1
	@$(BANNER) tfind1
	$(RUNTEST) ./tfind1
	@touch $@

tfind1b.check: tfind1a.check
	@$(BANNER) tfind1 rdonly
	$(RUNTEST) ./tfind1 rdonly
	@touch $@

tsync1.check: tsync1
	@$(BANNER) tsync1
	$(RUNTEST) ./tsync1
	@touch $@

tarray1.check: tarray1
	@$(BANNER) tarray1
	$(RUNTEST) ./tarray1
	@touch $@

tcopy1.check: tcopy1
	@$(BANNER) tcopy1
	$(RUNTEST) ./tcopy1
	@touch $@

tattr1.check: tattr1
	@$(BANNER) tattr1
	$(RUNTEST) ./tattr1
	@touch $@

# How to compile object modules used in various tests
terr1: terr1.lo
	@$(LT_LINK_EXE) $(CFLAGS) -o $@ terr1.lo $(LIBSS_LA) $(LDFLAGS) $(LIBS)

tfile1: tfile1.lo
	@$(LT_LINK_EXE) $(CFLAGS) -o $@ tfile1.lo $(LIBSS_LA) $(LDFLAGS) $(LIBS)

tblob1: tblob1.lo
	@$(LT_LINK_EXE) $(CFLAGS) -o $@ tblob1.lo $(LIBSS_LA) $(LDFLAGS) $(LIBS)

tblob2: tblob2.lo
	@$(LT_LINK_EXE) $(CFLAGS) -o $@ tblob2.lo $(LIBSS_LA) $(LDFLAGS) $(LIBS)

tfind1: tfind1.lo
	@$(LT_LINK_EXE) $(CFLAGS) -o $@ tfind1.lo $(LIBSS_LA) $(LDFLAGS) $(LIBS)

tsync1: tsync1.lo
	@$(LT_LINK_EXE) $(CFLAGS) -o $@ tsync1.lo $(LIBSS_LA) $(LDFLAGS) $(LIBS)

tarray1: tarray1.lo
	@$(LT_LINK_EXE) $(CFLAGS) -o $@ tarray1.lo $(LIBSS_LA) $(LDFLAGS) $(LIBS)

tcopy1: tcopy1.lo
	@$(LT_LINK_EXE) $(CFLAGS) -o $@ tcopy1.lo $(LIBSS_LA) $(LDFLAGS) $(LIBS)

tattr1: tattr1.lo
	@$(LT_LINK_EXE) $(CFLAGS) -o $@ tattr1.lo $(LIBSS_LA) $(LDFLAGS) $(LIBS)

@CONCLUDE@
